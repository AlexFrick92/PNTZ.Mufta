<UserControl x:Class="PNTZ.Mufta.App.View.CreateRecipe.CreateRecipeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PNTZ.Mufta.App.View.CreateRecipe" 
             xmlns:joint="clr-namespace:PNTZ.Mufta.App.Domain.Joint"
             xmlns:ctrl="clr-namespace:PNTZ.Mufta.App.View.Control"
             mc:Ignorable="d" 
             d:DesignHeight="850" d:DesignWidth="1200">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Desktop;component/Styles/Buttons.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Desktop;component/Styles/LayoutBlueStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <local:ModeToVisibilityConverter x:Key="ModeToVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="70"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <ctrl:ParamView Grid.Row="0" ParamLabel="ЗАДАНИЕ " ParamValue="{Binding SomeParamValue}"/>

        <Grid Grid.Row="1" >
            <Grid.Resources>
                <Style TargetType="Button" x:Key="SelectModeButton" BasedOn="{StaticResource PressableButton}">
                    <Setter Property="Margin" Value="3"/>
                    <Setter Property="Command" Value="{Binding SetModeCommand}"/>
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button CommandParameter="{x:Static joint:JointMode.Torque}" Grid.Column="0" Content="- МОМЕНТ -" >
                <Button.Style>
                    <Style BasedOn="{StaticResource SelectModeButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedMode}" Value="{x:Static joint:JointMode.Torque}">
                                <Setter Property="Background" Value="{StaticResource ActiveBgBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Command="{Binding SetModeCommand}" CommandParameter="{x:Static joint:JointMode.TorqueShoulder}" Grid.Column="1" Content="- МОМЕНТ -&#10; - ВЫСТУП -">
                <Button.Style>
                    <Style BasedOn="{StaticResource SelectModeButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedMode}" Value="{x:Static joint:JointMode.TorqueShoulder}">
                                <Setter Property="Background" Value="{StaticResource ActiveBgBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>


            <Button CommandParameter="{x:Static joint:JointMode.Length}" Grid.Column="2" Content="- ДЛИНА -">
                <Button.Style>
                    <Style BasedOn="{StaticResource SelectModeButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedMode}" Value="{x:Static joint:JointMode.Length}">
                                <Setter Property="Background" Value="{StaticResource ActiveBgBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Command="{Binding SetModeCommand}" CommandParameter="{x:Static joint:JointMode.TorqueLength}" Grid.Column="3" Content=" - ДЛИНА -&#10;- МОМЕНТ -">
                <Button.Style>
                    <Style BasedOn="{StaticResource SelectModeButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedMode}" Value="{x:Static joint:JointMode.TorqueLength}">
                                <Setter Property="Background" Value="{StaticResource ActiveBgBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button Command="{Binding SetModeCommand}" CommandParameter="{x:Static joint:JointMode.Jval}" Grid.Column="4" Content="- Значение J -">
                <Button.Style>
                    <Style BasedOn="{StaticResource SelectModeButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedMode}" Value="{x:Static joint:JointMode.Jval}">
                                <Setter Property="Background" Value="{StaticResource ActiveBgBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Command="{Binding SetModeCommand}" CommandParameter="{x:Static joint:JointMode.TorqueJVal}" Grid.Column="5" Content="- Значение J -&#10;  - МОМЕНТ -">
                <Button.Style>
                    <Style BasedOn="{StaticResource SelectModeButton}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedMode}" Value="{x:Static joint:JointMode.TorqueJVal}">
                                <Setter Property="Background" Value="{StaticResource ActiveBgBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </Grid>

        <local:GeneralParamView Grid.Row="2"/>

        <local:TorqModeParamView Grid.Row="3" Visibility="{Binding SelectedMode, Converter={StaticResource ModeToVisibilityConverter}, ConverterParameter={x:Static joint:JointMode.Torque}}"/>




    </Grid>
</UserControl>
